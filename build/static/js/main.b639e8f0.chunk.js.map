{"version":3,"sources":["filter.js","Form.js","services/persons.js","App.js","index.js"],"names":["Filter","props","react_default","a","createElement","onChange","handleFilterChange","AddForm","onSubmit","addName","value","newName","handleNameChange","newNumber","handleNumberChange","type","baseUrl","services_persons","axios","get","newObject","post","id","delete","concat","put","then","response","data","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","hakusana","setHakusana","_useState9","text","_useState10","notification","setNotification","useEffect","personService","lista","filter","person","name","toLowerCase","includes","message","className","style","event","console","log","target","Form","preventDefault","sisaltaako","forEach","human","find","h","changedPerson","objectSpread","number","window","confirm","fix","map","x","catch","error","setTimeout","key","onClick","personToFilter","deletePerson","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b639e8f0.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n    return (\n        <div>\n        <form>\n            <input onChange={props.handleFilterChange} />\n        </form>\n        </div>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst AddForm = (props) => {\n    return (\n        <form onSubmit={props.addName}>\n            <div>\n                nimi: <input value={props.newName} onChange={props.handleNameChange} />\n            </div>\n            <div>\n                numero: <input value={props.newNumber} onChange={props.handleNumberChange} />\n            </div>\n            <div>\n                <button type=\"submit\">lisää</button>\n            </div>\n        </form>\n    )\n}\n\n\nexport default AddForm","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst deletePerson = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, deletePerson, update }","import React, { useState, useEffect } from 'react'\nimport Filter from './filter'\nimport AddForm from './Form'\nimport personService from './services/persons'\nimport './index.css'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [hakusana, setHakusana] = useState('')\n    const [notification, setNotification] = useState({ text: null })\n\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(response => {\n                setPersons(response.data)\n            })\n        /*axios\n            .get('http://localhost:3001/persons')\n            .then(response => {\n                console.log('promise fulfilled')\n                setPersons(response.data)\n            })*/\n\n    }, [])\n\n    const Notification = (props) => {\n        if (props.message.text === null) {\n            return null\n        } else {\n            return (\n                <div className={props.message.style}>\n                    {props.message.text}\n                </div>\n            )\n        }\n    }\n\n    const addName = (event) => {\n        event.preventDefault()\n        let sisaltaako = true\n\n        persons.forEach(function (person) {\n            if (newName === person.name) {\n                sisaltaako = false\n            }\n        })\n\n        const human = persons.find(h => h.name.toLowerCase() === newName.toLowerCase())\n\n\n        if (sisaltaako === false) {\n\n            const changedPerson = { ...human, number: newNumber }\n            console.log('henkilö', changedPerson)\n\n            if (window.confirm(`${newName} on jo luettelossa, korvataanko vanha numero uudella?`)) {\n                console.log('korvataan')\n                personService\n                    .update(changedPerson.id, changedPerson)\n                    .then(fix => {\n                        setPersons(persons.map(x => x.id !== changedPerson.id ? x : fix))\n                        console.log(changedPerson.name)\n                    })\n                    .catch(error => {\n                        setNotification(\n                            {\n                                text: `Henkilö ${changedPerson.name} on jo poistettu listalta`,\n                                style: `error`\n                            }\n                        )\n                        setTimeout(() => {\n                            setNotification({ text: null })\n                        }, 5000)\n                    })\n                console.log('vielä sujuu')\n\n                setNotification(\n                    {\n                        text: `Henkilön ${changedPerson.name} päivitys onnistui`,\n                        style: `notification`\n                    }\n                )\n                setTimeout(() => {\n                    setNotification({ text: null })\n                }, 5000)\n\n\n            }\n            setNewName('')\n            setNewNumber('')\n\n        } else {\n            setNotification(\n                {\n                    text: `Henkilö ${newName} lisättiin luetteloon`,\n                    style: `notification`\n                }\n            )\n            setTimeout(() => {\n                setNotification({ text: null })\n            }, 5000)\n\n            personService\n                .create({ name: newName, number: newNumber })\n                .then(response => {\n                    setPersons(persons.concat(response.data))\n                    setNewName('')\n                    setNewNumber('')\n                })\n\n        }\n    }\n\n    const deletePerson = (person) => {\n        if (window.confirm(`Poisetaanko ${person.name}`)) {\n            setNotification(\n                {\n                    text: `Henkilö ${person.name} poistettiin listalta`,\n                    style: `error`\n                }\n            )\n            personService\n                .deletePerson(person.id)\n                .then(response => {\n                    setPersons(persons.filter((personToFilter => personToFilter.id !== person.id)))\n                })\n        }\n    }\n\n    const handleNameChange = (event) => {\n        console.log(event.target.value)\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        console.log(event.target.value)\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilterChange = (event) => {\n        console.log(event.target.value)\n\n        setHakusana(event.target.value)\n    }\n\n    const lista = hakusana ?\n        persons.filter((person) =>\n            person.name.toLowerCase().includes(hakusana.toLowerCase())\n        ) :\n        persons\n\n    return (\n        <div>\n            <h2>Puhelinluettelo</h2>\n            <Notification message={notification} />\n            <div>\n                Rajaa näytettäviä:\n                    <Filter handleFilterChange={handleFilterChange} />\n            </div>\n            <h3> Lisää uusi </h3>\n            <AddForm\n                addName={addName}\n                newName={newName}\n                handleNameChange={handleNameChange}\n                newNumber={newNumber}\n                handleNumberChange={handleNumberChange}\n            />\n            <h2>Numerot</h2>\n\n            {lista.map(person =>\n                <div key={person.name}>\n                    {person.name} {person.number}\n                    <button onClick={() => deletePerson(person)}>\n                        poista </button>\n                </div>)}\n        </div>\n    )\n\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}